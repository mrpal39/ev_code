# -*- coding: utf-8 -*-
# Generated by Django 1.11b1 on 2017-06-07 03:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dynamic_scraper', '0017_added_order_to_scraped_obj_attr'),
    ]

    operations = [
        migrations.AddField(
            model_name='scraperelem',
            name='use_default_procs',
            field=models.BooleanField(default=True, help_text='Use the default processors (Scrapy TakeFirst, DDS string_strip) for convenience.'),
        ),
        migrations.AlterField(
            model_name='scraperelem',
            name='mandatory',
            field=models.BooleanField(default=True, help_text='Drop item if attribute could not be scraped.'),
        ),
        migrations.AlterField(
            model_name='scraperelem',
            name='proc_ctxt',
            field=models.TextField(blank=True, help_text="Comma-separated aditional context (depending on processor) (e.g. 'pre_url': 'http://append_before.org/', 'post_string': '?append_after=True')."),
        ),
        migrations.AlterField(
            model_name='scraperelem',
            name='processors',
            field=models.TextField(blank=True, help_text='Optional comma-separated list of processors used (e.g. "pre_url, post_string").'),
        ),
        migrations.AlterField(
            model_name='scraperelem',
            name='reg_exp',
            field=models.TextField(blank=True, help_text="Optional filtering by regular expression (e.g. 'Scrape only (.*) the text in between')."),
        ),
        migrations.AlterField(
            model_name='scraperelem',
            name='request_page_type',
            field=models.CharField(choices=[('MP', 'Main Page'), ('DP1', 'Detail Page 1'), ('DP2', 'Detail Page 2'), ('DP3', 'Detail Page 3'), ('DP4', 'Detail Page 4'), ('DP5', 'Detail Page 5'), ('DP6', 'Detail Page 6'), ('DP7', 'Detail Page 7'), ('DP8', 'Detail Page 8'), ('DP9', 'Detail Page 9'), ('DP10', 'Detail Page 10'), ('DP11', 'Detail Page 11'), ('DP12', 'Detail Page 12'), ('DP13', 'Detail Page 13'), ('DP14', 'Detail Page 14'), ('DP15', 'Detail Page 15'), ('DP16', 'Detail Page 16'), ('DP17', 'Detail Page 17'), ('DP18', 'Detail Page 18'), ('DP19', 'Detail Page 19'), ('DP20', 'Detail Page 20'), ('DP21', 'Detail Page 21'), ('DP22', 'Detail Page 22'), ('DP23', 'Detail Page 23'), ('DP24', 'Detail Page 24'), ('DP25', 'Detail Page 25')], default='MP', help_text='Corresponding Request Page Types created for this scraper.', max_length=3),
        ),
        migrations.AlterField(
            model_name='scraperelem',
            name='scraped_obj_attr',
            field=models.ForeignKey(help_text='The different attributes to be scraped, exactly one attribute of type BASE necessary.', on_delete=django.db.models.deletion.CASCADE, to='dynamic_scraper.ScrapedObjAttr'),
        ),
        migrations.AlterField(
            model_name='scraperelem',
            name='x_path',
            field=models.TextField(blank=True, help_text='XPath or JSONPath expression, leave blank on "static" processor use.'),
        ),
    ]
